root_dir: '' # if empty, use current working directory

# --------- Logging Parameters ---------
logging: False # if True, log to wandb
output_dir: ./tmp # directory to save the model, reconstruction images, atlases, etc.
wandb_entity: # wandb entity
project_name: CINeMA # wandb project name
config_data: dhcp_neo_preterm_mm # name of the dataset to use (specified in config_data.yaml)

# --------- Device Parameters ---------
device: cuda
device_dataset: cpu
amp: True
seed: 42

# --------- General Options ---------
generate_cond_atlas: False # if True, generate the spatio-temporal (conditioned) atlas 
mask_reconstruction: True # mask inference reconstruction to remove noisy background
save_certainty_maps: False # if True, save the certainty maps (tissue probability maps)
compute_metrics: True # if True, compute the metrics for subject adaptation (requires GT references for each modality)
save_imgs: # if True, save the reconstruction images for the training/validation set
  train: True 
  val: True
save_model: False # if True, save the model to output_dir
load_model: 
  path: ""  
  epoch: 1 # which epoch to load

# --------- Data Augmentation Parameters ---------
# not used in the publication.
data_augmentation:
  activate: False
  # individual augmentations
  augment_deformation:
    p: 0.3
    num_control_points: 7
    max_displacement: 7.5
  augment_motion:
    p: 0.3
    degrees: 5
    translation: 5
    num_transforms: 4
  augment_noise: 
    p: 0.3
    mean: 1.5
    std: 3.0
  augment_biasfield:
    p: 0.3
    coeff: 1.0
  augment_gamma: 
    p: 0.3
    log_gamma: 0.4

# --------- Optimizer Parameters ---------
optimizer:
  re_init_latents: False # if True, re-initialize latent codes from gaussian distribution after each epoch
  lr_inr: 1.0e-4
  inr_weight_decay: 0.0
  lr_latent: 5.0e-4
  latent_weight_decay: 0.0
  lr_tf: 7.5e-3
  tf_weight_decay: 0.0
  tf_weight: 0.0
  loss_metric: 'l1'
  seg_weight: 1.0
  scheduler:
    type: 'cosine'
    eta_min: 2.5e-5


# --------- INR Decoder Parameters ---------
inr_decoder:
  tf_dim: 6 # 0 = off, 6 = rigid, 9 = rigid + scaling
  cnn_kernel_size: 0 # kernel size for the CNN for spatial modulation, if 0 no CNN is used
  latent_dim: [256, 3, 3, 3] # latent code dimension, [latent_dim, X, Y, Z]
  in_dim: 3 # input dimension of the coordinates, e.g. 3 for 3D images
  out_dim: [2, 10] #(number of modalities (not counting segmentation), number of segmentation channels)
  hidden_size: 1024 # hidden size of the MLP
  num_hidden_layers: 5 # number of hidden layers of the MLP
  modulated_layers: [1, 3, 5] # layers that are modulated by the latent code
  omega: [30, 30] # first and hidden omega of SIREN


# --------- Atlas Generation Parameters ---------
atlas_gen:
  spacing: [1.5, 1.5, 1.5] # spacing of the atlas in mm
  temporal_values: [37, 39, 41, 43, 45] # steps in the temporal dimension (scan age_min, scan age_max)
  conditions: # conditions to use for the atlas generation (must be specified and activated in config_data.yaml)
  # the condtions are combined with each temporal values --> exponential increase of combinations with each condition!!
    # birth_age: # condition name as stated in config_data.yaml
    #   values: [26, 31, 36, 41] # values to combine with the temporal values
    #   normed_values: False # if False, steps are specified in dataframe values, i.e., not normalized
    # lv_volume_normed:
    #   values: [-1.25, -0.75, 0, 0.75, 1.25]
    #   normed_values: True # if True, steps are specified in normalized values [-1, 1]
    
  # --- Mean Latent Regression ---
  gaussian_span: 1.0 # in weeks. +/- weeks of scan age to cover 95% of the weights, 
                     # i.e. 95% of the latent code of an atlas of age 30 weeks is made up 
                     # of latent codes from subjects with scan age 30 +/- 0.75 weeks, [29.25, 30.75]
  cond_scale: 0.05   # scaling factor for the condition vector 
                     # to adjust condition value range to latent code value range


# --------- Latent Space Analysis ---------
latent_anaylsis: # to predict scan_age from latentcode or explciit conditions during test-time
  activate: False
  predict_scan_age: 'NCA' #NCA, none for no prediction
  predict_birth_age: 'none' #NCA, none for no prediction, used for implicit birth-age prediction from latent code for ablation study.
  predict_ext_condition: 'none' #'MAE'  # predict a condition for test-time subjects, MAE for birth-age, binary crossentropy for sex, none for no prediction
  ba_regression:
    activate: False
    lr: 5.0e-4
    epochs: 1000


# --------- Training Parameters ---------
n_subjects: # number of subjects to use for training/validation
  train: 8 #92
  val: 4 #52
epochs: # number of epochs for training/validation
  train: 1
  val: 5 # the num epochs for latent code optimization, redone for each validation cycle)
validate_every: 1
batch_size: 250 # batch size for training/validation (number of subjects per batch)
n_samples: 25000 # number of coordinates in each "inner_batch" sampled across the subejct batch
num_workers: 16 # number of workers for dataloader
